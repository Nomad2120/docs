image: docker:19.03.13

services:
  - docker:19.03.13-dind

variables:
  #  DOCKER_DRIVER: overlay2
  #  DOCKER_HOST: docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - deploy

build:
  stage: build
  when: on_success
  only:
    - master
    - develop
  tags:
    - docker
  before_script:
    - export DOCKER_IMAGE=${DOCKER_REGISTRY}/${CI_PROJECT_PATH}
    - export DOCKER_IMAGE_SHA=$DOCKER_IMAGE:${CI_COMMIT_SHA:0:12}
    - export DOCKER_IMAGE_SLUG=$DOCKER_IMAGE:$CI_COMMIT_REF_SLUG
    #- echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} -u ${DOCKER_USER} --password-stdin
  script:
    - echo ${DOCKER_IMAGE_SHA}
    - echo ${DOCKER_IMAGE_SLUG}
    #- docker build -t $DOCKER_IMAGE_SHA --build-arg "ssh_key=${GITLAB_SSH_KEY}" --network=host -f ./Dockerfile .
    - docker build -t $DOCKER_IMAGE_SHA --network=host -f ./Dockerfile .
    - docker push $DOCKER_IMAGE_SHA
    - |
      if [ "$CI_COMMIT_REF_SLUG" = "master" ]; then
        export DOCKER_IMAGE_SLUG=$DOCKER_IMAGE:latest
        docker tag $DOCKER_IMAGE_SHA $DOCKER_IMAGE_SLUG
        docker push $DOCKER_IMAGE_SLUG
      fi
      if [ "$CI_COMMIT_TAG" != "" ]; then
        export DOCKER_IMAGE_TAG="${DOCKER_IMAGE}:${CI_COMMIT_TAG}"
        docker tag $DOCKER_IMAGE_SHA $DOCKER_IMAGE_TAG
        docker push $DOCKER_IMAGE_TAG
      fi


build-alpha:
  stage: build
  when: on_success
  only:
    - alpha
  tags:
    - docker
  before_script:
    - export DOCKER_IMAGE=${DOCKER_REGISTRY}/${CI_PROJECT_PATH}_alpha
    - export DOCKER_IMAGE_SHA=$DOCKER_IMAGE:${CI_COMMIT_SHA:0:12}
    - export DOCKER_IMAGE_SLUG=$DOCKER_IMAGE:$CI_COMMIT_REF_SLUG
    - echo  ${DOCKER_IMAGE}
    - echo  ${DOCKER_IMAGE_SHA}
    #- echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} -u ${DOCKER_USER} --password-stdin
  script:
    - echo ${DOCKER_IMAGE_SHA}
    - echo ${DOCKER_IMAGE_SLUG}
    #- docker build -t $DOCKER_IMAGE_SHA --build-arg "ssh_key=${GITLAB_SSH_KEY}" --network=host -f ./Dockerfile .
    - docker build -t $DOCKER_IMAGE_SHA --network=host -f ./Dockerfile .
    - docker push $DOCKER_IMAGE_SHA
    - |
      if [ "$CI_COMMIT_REF_SLUG" = "master" ]; then
        export DOCKER_IMAGE_SLUG=$DOCKER_IMAGE:latest
        docker tag $DOCKER_IMAGE_SHA $DOCKER_IMAGE_SLUG
        docker push $DOCKER_IMAGE_SLUG
      fi
      if [ "$CI_COMMIT_TAG" != "" ]; then
        export DOCKER_IMAGE_TAG="${DOCKER_IMAGE}:${CI_COMMIT_TAG}"
        docker tag $DOCKER_IMAGE_SHA $DOCKER_IMAGE_TAG
        docker push $DOCKER_IMAGE_TAG
      fi

deploy-dev:
  image: registry.gitlab.com/ussik-gitlab/baseimage:latest
  stage: deploy
  when: on_success
  only:
    - develop
  tags:
    - docker
    - oci
    - develop
  before_script:
    - export DOCKER_IMAGE=${DOCKER_REGISTRY}/${CI_PROJECT_PATH}
    - export DOCKER_IMAGE_SHA=$DOCKER_IMAGE:${CI_COMMIT_SHA:0:12}
  script:
    - docker-compose --version
    - docker-compose -f ./docker-compose-deploy-dev.yml up -d

deploy-prod:
  image: registry.gitlab.com/ussik-gitlab/baseimage:latest
  stage: deploy
  when: on_success
  only:
    - master
  tags:
    - docker
    - oci
    - production
  before_script:
    - export DOCKER_IMAGE=${DOCKER_REGISTRY}/${CI_PROJECT_PATH}
    - export DOCKER_IMAGE_SHA=$DOCKER_IMAGE:${CI_COMMIT_SHA:0:12}
  script:
    - docker-compose --version
    - docker-compose -f ./docker-compose-deploy-prod.yml up -d

deploy-alpha:
  image: registry.gitlab.com/ussik-gitlab/baseimage:latest
  stage: deploy
  when: on_success
  only:
    - alpha
  tags:
    - docker
    - oci
    - alpha
  before_script:
    - export DOCKER_IMAGE=${DOCKER_REGISTRY}/${CI_PROJECT_PATH}_alpha
    - export DOCKER_IMAGE_SHA=$DOCKER_IMAGE:${CI_COMMIT_SHA:0:12}
    - echo  ${DOCKER_IMAGE}
    - echo  ${DOCKER_IMAGE_SHA}
  script:
    - docker-compose --version
    - docker-compose -f ./docker-compose-deploy-alpha.yml up -d


