// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/act/work-completion/{id}": {
            "get": {
                "description": "Заполнение шаблона акта.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Акты"
                ],
                "summary": "Заполнение шаблона акта.",
                "operationId": "FillAct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ид акта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.FillActResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/act/work-completion/{id}/sign": {
            "put": {
                "description": "Сохранение подписанного акта.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Акты"
                ],
                "summary": "Сохранение подписанного акта.",
                "operationId": "SaveAct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ид акта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "расширение файла",
                        "name": "extension",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "документ base64",
                        "name": "docBase64",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "модель",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract": {
            "post": {
                "description": "Заполнение шаблона договора офферты.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Заполнение шаблона договора офферты.",
                "operationId": "FillContract",
                "parameters": [
                    {
                        "description": "модель",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FillContractRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.FillContractResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/osi/{id}/sign": {
            "post": {
                "description": "Подписание нового договора офферты.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Подписание нового договора офферты.",
                "operationId": "SignOsiContract",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "документ base64",
                        "name": "docBase64",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "модель",
                        "schema": {
                            "$ref": "#/definitions/model.AddDocResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/{id}/sign": {
            "put": {
                "description": "Подписание договора офферты.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Подписание договора офферты.",
                "operationId": "SignContract",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id заявки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "документ base64",
                        "name": "docBase64",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "модель",
                        "schema": {
                            "$ref": "#/definitions/model.SignContractResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/doc": {
            "get": {
                "description": "Получение списка всех видов документов.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetDoc"
                ],
                "summary": "Получение списка всех видов документов.",
                "operationId": "GetDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name search by id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/invoices/qrpage/{id}": {
            "get": {
                "description": "Заполнение шаблона акта.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Квитанции"
                ],
                "summary": "Заполнение шаблона акта.",
                "operationId": "FillQRPage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ОСИ ИД",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.FillQRPageResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/notification/debetor/{abonentId}": {
            "get": {
                "description": "Заполнение шаблона Уведомления должнику.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Уведомления"
                ],
                "summary": "Заполнение шаблона Уведомления должнику.",
                "operationId": "FillNotficationDebetor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Абонента",
                        "name": "abonentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.FillDebetorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/notification/notary/{abonentId}": {
            "get": {
                "description": "Заполнение шаблона Уведомления нотариусу.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Уведомления"
                ],
                "summary": "Заполнение шаблона Уведомления нотариусу.",
                "operationId": "FillNotficationNotary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Абонента",
                        "name": "abonentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.FillNotaryApplicationResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/abonents/{id}": {
            "get": {
                "description": "Получить таблицу помещений.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Получить таблицу помещений.",
                "operationId": "GetOSIAbonentsReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/accounts/monthly": {
            "post": {
                "description": "Формирование ежемесячного отчета по счетам.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Формирование ежемесячного отчета по счетам.",
                "operationId": "GetAccountsMonthlyReport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "язык отчета",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "description": "модель отчета",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountReportsResult"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.ReportResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/debts/{id}": {
            "get": {
                "description": "Получение отчета  по долгам за текущий месяц.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Получение отчета по долгам за текущий месяц.",
                "operationId": "GetDebtsReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата начала",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата окончания",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/fixes/{id}": {
            "get": {
                "description": "Корректировки по всем абонентам и услугам ОСИ за период.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Корректировки по всем абонентам и услугам ОСИ за период.",
                "operationId": "GetFixesReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата начала",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата окончания",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/osv/{id}": {
            "get": {
                "description": "Получение отчета сальдо за текущий месяц.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Получение отчета сальдо за текущий месяц.",
                "operationId": "GetOSVReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата начала",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата окончания",
                        "name": "end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "для абонента",
                        "name": "forAbonent",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/osv/{id}/abonent/{abonentId}": {
            "get": {
                "description": "Получение отчета сальдо по абоненту за все периоды.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Получение отчета сальдо по абоненту за все периоды.",
                "operationId": "GetAbonentOSVReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id Абонента",
                        "name": "abonentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Номер помещения",
                        "name": "flat",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/payments/orders/{id}": {
            "get": {
                "description": "Свод платежных поручений по ОСИ за период.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Свод платежных поручений по ОСИ за период.",
                "operationId": "GetPaymentOrdersReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата начала",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата окончания",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/report/payments/{id}": {
            "get": {
                "description": "Получение реестра платежей за период.",
                "consumes": [
                    "application/json",
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Отчеты"
                ],
                "summary": "Получение реестра платежей за период.",
                "operationId": "GetPaymentsReport",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id OSI",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата начала",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата окончания",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/docs/html2pdf": {
            "post": {
                "description": "Преобразовать html в pdf",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Преобразовать html в pdf",
                "operationId": "Html2Pdf",
                "parameters": [
                    {
                        "description": "модель",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Html2PdfRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Base64",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pki/sign/wsse": {
            "post": {
                "description": "Подписание WSSE.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "PKI"
                ],
                "summary": "Подписание WSSE.",
                "operationId": "SignWSSE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID элемента",
                        "name": "signNodeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Имя хранилища сертификатов",
                        "name": "alias",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "XML plain text",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "подписанный xml",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AccountReportCategory": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "nameKz": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "model.AccountReportsResult": {
            "type": "object",
            "properties": {
                "categories": {
                    "description": "UnionType      AccountReportsUnionType ` + "`" + `json:\"unionType\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccountReportCategory"
                    }
                },
                "osiAddress": {
                    "type": "string"
                },
                "osiName": {
                    "type": "string"
                },
                "period": {
                    "description": "\"2023-11-30T09:34:03.629Z\",",
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "unionTypeKz": {
                    "type": "string"
                },
                "unionTypeRu": {
                    "type": "string"
                }
            }
        },
        "model.AddDocResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.AddDocResult"
                }
            }
        },
        "model.AddDocResult": {
            "type": "object",
            "properties": {
                "docTypeCode": {
                    "type": "string"
                },
                "docTypeNameKz": {
                    "type": "string"
                },
                "docTypeNameRu": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "scan": {
                    "$ref": "#/definitions/model.Scan"
                }
            }
        },
        "model.BaseResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.DocResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "model.FillActResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.FillActResult"
                }
            }
        },
        "model.FillActResult": {
            "type": "object",
            "properties": {
                "pdfBase64": {
                    "description": "HTMLBase64 string ` + "`" + `json:\"htmlBase64\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "model.FillContractRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "apartCount": {
                    "type": "integer"
                },
                "createDt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fio": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "idn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "site": {
                    "type": "string"
                },
                "tariff": {
                    "type": "number"
                }
            }
        },
        "model.FillContractResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.FillContractResult"
                }
            }
        },
        "model.FillContractResult": {
            "type": "object",
            "properties": {
                "htmlBase64": {
                    "type": "string"
                },
                "pdfBase64": {
                    "type": "string"
                }
            }
        },
        "model.FillDebetorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.FillDebetorResult"
                }
            }
        },
        "model.FillDebetorResult": {
            "type": "object",
            "properties": {
                "docBase64": {
                    "type": "string"
                }
            }
        },
        "model.FillNotaryApplicationResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.FillNotaryApplicationResult"
                }
            }
        },
        "model.FillNotaryApplicationResult": {
            "type": "object",
            "properties": {
                "docBase64": {
                    "type": "string"
                }
            }
        },
        "model.FillQRPageResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/model.FillQRPageResult"
                }
            }
        },
        "model.FillQRPageResult": {
            "type": "object",
            "properties": {
                "pdfBase64": {
                    "type": "string"
                }
            }
        },
        "model.Html2PdfRequest": {
            "type": "object",
            "properties": {
                "htmlBase64": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/model.PDFSettings"
                }
            }
        },
        "model.PDFSettings": {
            "type": "object",
            "properties": {
                "dpi": {
                    "description": "Change the dpi explicitly (this has no effect on X11 based systems)",
                    "type": "integer",
                    "example": 300
                },
                "encoding": {
                    "description": "Set the default text encoding, for input",
                    "type": "string",
                    "example": "utf-8"
                },
                "footerFontSize": {
                    "description": "Set footer font size (default 12)",
                    "type": "integer",
                    "example": 12
                },
                "grayscale": {
                    "description": "PDF will be generated in grayscale",
                    "type": "boolean",
                    "example": false
                },
                "imageDpi": {
                    "description": "When embedding images scale them down to this dpi (default 600)",
                    "type": "integer",
                    "example": 600
                },
                "imageQuality": {
                    "description": "When jpeg compressing images use this quality (default 94)",
                    "type": "integer",
                    "example": 94
                },
                "marginBottom": {
                    "description": "Set the page bottom margin",
                    "type": "integer",
                    "example": 10
                },
                "marginLeft": {
                    "description": "Set the page left margin (default 10mm)",
                    "type": "integer",
                    "example": 10
                },
                "marginRight": {
                    "description": "Set the page right margin (default 10mm)",
                    "type": "integer",
                    "example": 10
                },
                "marginTop": {
                    "description": "Set the page top margin",
                    "type": "integer",
                    "example": 10
                },
                "minimumFontSize": {
                    "description": "Minimum font size",
                    "type": "integer"
                },
                "noCollate": {
                    "description": "Do not collate when printing multiple copies (default collate)",
                    "type": "boolean",
                    "example": false
                },
                "noPdfCompression": {
                    "description": "Do not use lossless compression on pdf objects",
                    "type": "boolean",
                    "example": false
                },
                "orientation": {
                    "description": "Set orientation to Landscape or Portrait (default Portrait)",
                    "type": "string",
                    "example": "Portrait"
                },
                "pageHeight": {
                    "description": "Page height",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "Set paper size to: A4, Letter, etc. (default A4)",
                    "type": "string",
                    "example": "A4"
                },
                "pageWidth": {
                    "description": "Page width",
                    "type": "integer"
                },
                "zoom": {
                    "description": "Use this zoom factor (default 1)",
                    "type": "number",
                    "example": 1
                }
            }
        },
        "model.ReportResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "model.Scan": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.SignContractResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
